#!/usr/bin/env python3

import argparse
import os
import subprocess
from urllib import request

junit_platform_console_file = os.path.expanduser(
    "~/.junit-wrapper/junit-platform-console-standalone.jar"
)


def download_junit_platform_console():
    junit_platform_console_download_url = "https://mirrors.huaweicloud.com/repository/maven/org/junit/platform/junit-platform-console-standalone/1.11.1/junit-platform-console-standalone-1.11.1.jar"
    request.urlretrieve(
        junit_platform_console_download_url, junit_platform_console_file
    )


def check_junit_platform_console_file():
    if not os.path.exists(junit_platform_console_file):
        junit_platform_console_dir = os.path.dirname(junit_platform_console_file)
        if not os.path.exists(junit_platform_console_dir):
            os.makedirs(junit_platform_console_dir)

        download_junit_platform_console()


def read_junit_opts():
    opts = []
    junit_opts_filename = ".junit-opts"
    if os.path.exists(junit_opts_filename) and os.path.isfile(junit_opts_filename):
        with open(junit_opts_filename, mode="r", encoding="utf-8") as f:
            for line in f.readlines():
                line = line.strip()
                if (line.find(" ") == -1):
                    opts.append(line)
                else:
                    for item in line.split(" "):
                        if len(item) > 0:
                            opts.append(item)
    return opts


def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("classpaths_file", help="类路径信息")
    parser.add_argument("test_class_or_method", help="要测试的类或方法")

    known_args = parser.parse_args()

    check_junit_platform_console_file()

    classpaths = ""
    test_class_or_method = known_args.test_class_or_method
    test_mode = "-m" if test_class_or_method.rfind("#") > 0 else "-c"
    with open(known_args.classpaths_file) as classpaths_file:
        classpaths = classpaths_file.readline()

    os.remove(known_args.classpaths_file)

    cmd_args = ["java"]

    junit_opts = read_junit_opts()
    for opt in junit_opts:
        cmd_args.append(opt)

    cmd_args.append("-jar")
    cmd_args.append(junit_platform_console_file)
    cmd_args.append("execute")
    cmd_args.append("--disable-banner")
    cmd_args.append("-cp")
    cmd_args.append(classpaths)
    cmd_args.append(test_mode)
    cmd_args.append(test_class_or_method)

    subprocess.run(cmd_args, encoding="utf-8")


if __name__ == "__main__":
    main()
